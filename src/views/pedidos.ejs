<!DOCTYPE html>
<html lang="en">
<head>
  <script
 src="https://code.jquery.com/jquery-3.7.1.min.js"
 integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
 crossorigin="anonymous"></script>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">  

    <style>
      .save-cb-state {
        accent-color: pink;
      }
    </style>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
</head>
<body>  

  <ul class="nav nav-pills nav justify-content-center py-3">    
    <li class="nav-item">
      <a class="nav-link " href="https://www.estoque-coper.com/pedido">Fazer pedido</a>
    </li>
    <li class="nav-item">
      <a class="nav-link active" href="https://www.estoque-coper.com/pedidos">Pedidos</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="https://www.estoque-coper.com/opcoes">Menu</a>
    </li>
  </ul>

      <div class="d-flex flex-column mx-auto justify-content-center align-items-center">
              
            <hr>  
        <form action="/pedidos" method="POST" id="myForm">  
      
         
          <table class="table">
            <thead class="thead-light">
                   <tr>
                  <th scope="col">Patricia</th>                  
                  <th scope="col">Darci</th>                  
                  <th scope="col">#</th>                  
                  <th scope="col">Produto</th>
                  <th scope="col">Código de Barras</th>
                  <th scope="col">Quem pediu</th>
                  <th scope="col">Quantidade</th>                 
                  <th scope="col">Número da pessoa</th>                 
                  <th scope="col">Quando Pediu</th>                 
                </tr>
              </thead>     
              <% pedidoBD.forEach(function(pedidos, i) { %>                                        
              <tbody>        
              <tr> <div class="aqui">
              <td><input type="checkbox" class="save-cb-state" name="mycheckboxA<%=i%>" ></td>                 
              <td><input type="checkbox" class="save-cb-state2" name="mycheckboxB<%=i%>" ></td>                 
              <td><%= i++ %></td>            
                    <td><%= pedidos.nome.toUpperCase() %></td>
                    <td><%= pedidos.barras %></td>
                    <td><%= pedidos.quem_pediu.toUpperCase() %> <%= pedidos.reposicao %></td>                             
                    <td><%= pedidos.qtd %></td>                             
                    <td><%= pedidos.numero %></td>                             
                    <td><% const data = new Date(pedidos.quando_pediu); %>
                      <% data.setDate(data.getDate()) %> 
                      <% const options = { year: 'numeric', month: 'numeric', day: 'numeric'}; %>
                      <%= data.toLocaleDateString('pt-br', options); %></td> </div> 
                    <th><a class="oi" href="https://www.estoque-coper.com/editarPedido/<%= pedidos._id %>">Editar</a></th>
                    <th><a class="text-danger oi" href="https://www.estoque-coper.com/deletarPedido/<%= pedidos._id %>">Excluir</a></th>
                                
            </tr> 
                        
                <% }) %>
            </table>
            </tbody>
                    </form>
                <script src="http://code.jquery.com/jquery.js"></script>  

                 
   
<script>

          (function() {
  // variable to store our current state
  var cbstate;
  
  // bind to the onload event
  window.addEventListener('load', function() {
    // Get the current state from localstorage
    // State is stored as a JSON string
    cbstate = JSON.parse(localStorage['CBState'] || '{}');
  
    // Loop through state array and restore checked 
    // state for matching elements
    for(var i in cbstate) {
      var el = document.querySelector('input[name="' + i + '"]');
      if (el) el.checked = true;
    }
  
    // Get all checkboxes that you want to monitor state for
    var cb = document.getElementsByClassName('save-cb-state');
  
    // Loop through results and ...
    for(var i = 0; i < cb.length; i++) {
  
      //bind click event handler
      cb[i].addEventListener('click', function(evt) {
        // If checkboxe is checked then save to state
        if (this.checked) {
          cbstate[this.name] = true;


        }
    
    // Else remove from state
        else if (cbstate[this.name]) {
          delete cbstate[this.name];
        }
    
    // Persist state
        localStorage.CBState = JSON.stringify(cbstate);
      });
    }
  });
})();
</script>

<script>
// Avoid scoping issues by encapsulating code inside anonymous function
(function () {
  // variable to store our current state
  var cbstate2;
  
  // bind to the onload event
  window.addEventListener('load', function() {
    // Get the current state from localstorage
    // State is stored as a JSON string
    cbstate2 = JSON.parse(localStorage['CBState'] || '{}');
  
    // Loop through state array and restore checked 
    // state for matching elements
    for(var i in cbstate2) {
      var el2 = document.querySelector('input[name="' + i + ' "]');
      
      if (el2) el2.checked = true;      
      
    }
  
    // Get all checkboxes that you want to monitor state for
    var cb2 = document.getElementsByClassName('save-cb-state2');
  
    // Loop through results and ...
    for(var i = 0; i < cb2.length; i++) {
  
      //bind click event handler
      cb2[i].addEventListener('click', function(evt) {
        // If checkboxe is checked then save to state
        if (this.checked) {
          cbstate2[this.name] = true;
        }
    
    // Else remove from state
        else if (cbstate2[this.name]) {
          delete cbstate2[this.name];
        }
    
    // Persist state
        localStorage.CBState = JSON.stringify(cbstate2);
      });
    }
  });
})();

        </script>
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
</body>
</html>
